<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cell</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Cell attributes

// Chemicals this cell can withstand
var chanceToHaveOneResistance = 0.2; // Chance that this cell will be resistant to 1 chemical type

var indexToHaveResistanceOn = -1;
if(random(1) &lt; chanceToHaveOneResistance)
{
    indexToHaveResistanceOn = irandom(array_length_1d(global.chemicals));
}
var i;
for(i=0; i&lt;array_length_1d(global.chemicals); i++)
{
    isResistantToChemical[i] = (indexToHaveResistanceOn == i);
}


// Particles this cell can process/consume
var guaranteedIndex = irandom(array_length_1d(global.particles));
for(i=0; i&lt;array_length_1d(global.particles); i++)
{
    canConsumeParticle[i] = ((guaranteedIndex == i) || (random(1) &lt; 1/array_length_1d(global.particles)));
}


ATP = 0;
temperature = 70;
canBeHurt = true;
scaleFactor = 0.5+ 0.25*random(5);
image_yscale = scaleFactor * 0.30
image_xscale = scaleFactor * 0.30
maxHeight = sprite_height*image_yscale*2;
maxWidth = sprite_width*image_xscale*2;
image_counter = 0

maxHealth = 100*scaleFactor
cellHealth = maxHealth

image_blend=random(c_white)
image_speed = 0
image_index = 0
shape = "circle"

hasCellWall = false;
tempResitance = 0;
visionLevel = 0;

canGlycosis = false;
isPhototropic = false;
canPhotosythesis = false;
canOxidativeMetabolise = false;
canPhagocytosis = false;


ciliaLevel = irandom(3)-1;
flagellaLevel = irandom(3)-1;
if(ciliaLevel&lt;0) { ciliaLevel = 0}
if(flagellaLevel&lt;0) { flagellaLevel = 0}
cellSpeed =1;
if(flagellaLevel == 0)
{
    cellSpeed += ciliaLevel
} else
{
    cellSpeed += 3*flagellaLevel -ciliaLevel+1
}

if(object_get_name(id.object_index) != "obj_player")
{
    alarm[0] = 10;
}
else
{
    // Important for background changing stuff
    scaler = bg_r/room_height;
    scaleg = bg_g/room_height;
    scaleb = bg_b/room_height;
}

// Set up bubble emitter
Particle_Emitter = part_emitter_create(global.P_System_Behind);
alarm[1] = 30;

// Alarm to see if the cell can be hurt
alarm[2] = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!canBeHurt)
{
    canBeHurt = true;
}
alarm[2] = 10;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Alarm dealing with health (damage?)</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(speed != 0)
{
    temperature = 65 - (y * 0.04);

    //The cell is moving so we move the particle emitter
    part_emitter_region(global.P_System_Behind, Particle_Emitter, x, x, y, y, ps_shape_ellipse, ps_distr_linear);
    
    //Now to burst particles
    part_emitter_burst(global.P_System_Behind, Particle_Emitter, global.Bubble, 2);
}

alarm[1] = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>direction = random(360)
image_angle = direction+180
speed = 2
alarm[0] = 10
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Remove the cell if it's out of health
if (cellHealth &lt;= 0)
{
    instance_destroy();
}
if(image_counter &lt;= 4) 
    {
        if(ciliaLevel!=0)
        {
            if(flagellaLevel!=0)
            {
                if((image_index &lt;7)||(image_index==9)) { image_index = 7 }
                else if(image_index ==7){ image_index = 8}
                else {image_index = 9}
            }
            else
            {
                if(((image_index &lt;4)&amp;&amp;(image_index&gt;70))||(image_index==5)) 
                { 
                    image_index = 4 
                }
                else if(image_index ==4){ image_index = 5}
                else {image_index = 6}
            }
        }
        else{
            if(flagellaLevel!=0)
            {
                if(image_index ==1) { image_index = 2 }
                else if(image_index = 2) { image_index = 3}
                else { image_index = 1}
            }
            else { image_index = 0}
        }
        image_counter++
    }
    else
    {
        image_counter =0;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_chemcloud">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (canBeHurt &amp;&amp; !isResistantToChemical[other.chemtype])
{
    cellHealth = cellHealth - 10;
    canBeHurt = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_particle">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(canConsumeParticle[other.parttype])
{
    with(other) {
        instance_destroy()
    }
    ATP = ATP +1
    
    if((image_yscale*sprite_height&lt;maxHeight)&amp;&amp;(image_xscale*sprite_width&lt;maxWidth)) {
        image_xscale = 1.05*image_xscale
        image_yscale = 1.05*image_yscale
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
